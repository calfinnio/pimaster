---
- name: Install git
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - git
  tags: ["git", "extra_packages"]

- name: Install ansible
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - ansible
  tags: ["ansible", "extra_packages"]

- name: Install dnsutils
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - dnsutils
  tags: ["dnsutils", "extra_packages"]

- name: Install golang, jq
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - golang
    - jq
  tags: ["golang", "extra_packages"]

- name:
    shell: whoami
    register: user_info
  tags: ["golang"]

- debug:
    msg: "{{ user_info }}"
  tags: ["golang"]

- name: Create go dir
  file:
    path: "{{ ansible_env.HOME }}/go"
    state: directory
  become: no
  become_user: homelab  
  tags: ["golang", "extra_packages"]

- name: check go version
  command: go version
  register: result
  changed_when: no
  ignore_errors: true
  become: no
  become_user: homelab
  tags: ["golang", "extra_packages"]

- name: Set GOPATH
  set_fact:
    go_path: "{{ lookup('env', 'GOPATH') | default(ansible_env.HOME+'/go', true) }}"
  when: not result|failed
  become: no
  become_user: homelab
  tags: ["golang", "extra_packages"]

- name: go get gogs
  shell: go get -u github.com/gogits/gogs
  environment:
    GOPATH: "{{ go_path }}"
  register: gogs
  when: not result|failed
  become: no
  become_user: homelab
  tags: ["golang", "extra_packages"]

  
#- name: Copy ovftool
#  copy:
#    src: "{{ role_path }}/files/ovftool/"
#    dest: "/mnt/usb/ovftool"
#    force: no
#  tags: ["ovftool", "extra_packages"]

- name: Copy ovftool
  copy:
    src: "/usr/lib/vmware-ovftool"
    dest: "/mnt/usb/nfs/"
    force: no
  tags: ["ovftool", "extra_packages"]

- name: Replace "shebang"
  lineinfile: 
    dest: "/mnt/usb/nfs/vmware-ovftool/ovftool"
    regexp: '^(.*)#!/bin/bash(.*)$' 
    line: '#!/bin/sh'
  tags: ["ovftool"]

- name: find the file we just copied without knowing the name
  find:
    paths: /mnt/usb/nfs/vmware-ovftool/
    file_type: "file"
    patterns: "ovftool*"
  register: find_result
  tags: ["ovftool", "extra_packages"]
- debug:
    var: find_result

- name: Add execute permission to file
  file:
    path: "{{ item.path }}"
    state: file
    mode: "u+x,g+x,o+x"  
  with_items: "{{ find_result.files }}"
  tags: ["ovftool", "extra_packages"]

- name: Create iso dir
  file:
    path: /mnt/usb/vcsa_iso
    state: directory
  tags: ["vcsa", "extra_packages"]

- name: Copy vcsa iso
  copy:
    src: "{{ role_path }}/files/vcsa/"
    dest: "/mnt/usb/nfs/vcsa"
    force: no
  tags: ["vcsa", "extra_packages"]

- name: find the file we just copied without knowing the name
  find:
    paths: /mnt/usb/nfs/vcsa/
    file_type: "file"
    patterns: "*iso"
  register: find_result
  tags: ["vcsa", "extra_packages"]
- debug:
    var: find_result

- name: Mount iso
  command: "mount -o loop {{ item.path }} /mnt/usb/vcsa_iso"
  with_items: "{{ find_result.files }}"
  tags: ["vcsa", "extra_packages"]

#Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
#PS /home/homelab> Install-Module -Name VMware.PowerCLI -Scope CurrentUser